#include "../headers.hpp"

namespace Sseu::BlockSource {
    BlockTexDataWrapper<1U> red_stone_powder_joint_btx_prune({
        {
            0x40, 0x00, 0x00, 0xff, // [0, 0]
            0x40, 0x00, 0x00, 0xff, // [0, 1]
            0x40, 0x00, 0x00, 0xff, // [0, 2]
            0x40, 0x00, 0x00, 0xff, // [0, 3]

            0x40, 0x00, 0x00, 0xff, // [1, 0]
            0x40, 0x00, 0x00, 0xff, // [1, 1]
            0x40, 0x00, 0x00, 0xff, // [1, 2]
            0x40, 0x00, 0x00, 0xff, // [1, 3]

            0x40, 0x00, 0x00, 0xff, // [2, 0]
            0x40, 0x00, 0x00, 0xff, // [2, 1]
            0x40, 0x00, 0x00, 0xff, // [2, 2]
            0x40, 0x00, 0x00, 0xff, // [2, 3]

            0x40, 0x00, 0x00, 0xff, // [3, 0]
            0x40, 0x00, 0x00, 0xff, // [3, 1]
            0x40, 0x00, 0x00, 0xff, // [3, 2]
            0x40, 0x00, 0x00, 0xff, // [3, 3]

            0x40, 0x00, 0x00, 0xff, // [4, 0]
            0x40, 0x00, 0x00, 0xff, // [4, 1]
            0x40, 0x00, 0x00, 0xff, // [4, 2]
            0x40, 0x00, 0x00, 0xff, // [4, 3]

            0x40, 0x00, 0x00, 0xff, // [5, 0]
            0x40, 0x00, 0x00, 0xff, // [5, 1]
            0x40, 0x00, 0x00, 0xff, // [5, 2]
            0x40, 0x00, 0x00, 0xff, // [5, 3]

            0x40, 0x00, 0x00, 0xff, // [6, 0]
            0x40, 0x00, 0x00, 0xff, // [6, 1]
            0x40, 0x00, 0x00, 0xff, // [6, 2]
            0x40, 0x00, 0x00, 0xff, // [6, 3]

            0x40, 0x00, 0x00, 0xff, // [7, 0]
            0x40, 0x00, 0x00, 0xff, // [7, 1]
            0x40, 0x00, 0x00, 0xff, // [7, 2]
            0x40, 0x00, 0x00, 0xff, // [7, 3]

            0x40, 0x00, 0x00, 0xff, // [8, 0]
            0x40, 0x00, 0x00, 0xff, // [8, 1]
            0x40, 0x00, 0x00, 0xff, // [8, 2]
            0x40, 0x00, 0x00, 0xff, // [8, 3]

            0x40, 0x00, 0x00, 0xff, // [9, 0]
            0x40, 0x00, 0x00, 0xff, // [9, 1]
            0x40, 0x00, 0x00, 0xff, // [9, 2]
            0x40, 0x00, 0x00, 0xff, // [9, 3]

            0x40, 0x00, 0x00, 0xff, // [10, 0]
            0x40, 0x00, 0x00, 0xff, // [10, 1]
            0x40, 0x00, 0x00, 0xff, // [10, 2]
            0x40, 0x00, 0x00, 0xff, // [10, 3]

            0x40, 0x00, 0x00, 0xff, // [11, 0]
            0x40, 0x00, 0x00, 0xff, // [11, 1]
            0x40, 0x00, 0x00, 0xff, // [11, 2]
            0x40, 0x00, 0x00, 0xff, // [11, 3]

            0x40, 0x00, 0x00, 0xff, // [12, 0]
            0x40, 0x00, 0x00, 0xff, // [12, 1]
            0x40, 0x00, 0x00, 0xff, // [12, 2]
            0x40, 0x00, 0x00, 0xff, // [12, 3]

            0x40, 0x00, 0x00, 0xff, // [13, 0]
            0x40, 0x00, 0x00, 0xff, // [13, 1]
            0x40, 0x00, 0x00, 0xff, // [13, 2]
            0x40, 0x00, 0x00, 0xff, // [13, 3]

            0x40, 0x00, 0x00, 0xff, // [14, 0]
            0x40, 0x00, 0x00, 0xff, // [14, 1]
            0x40, 0x00, 0x00, 0xff, // [14, 2]
            0x40, 0x00, 0x00, 0xff, // [14, 3]

            0x40, 0x00, 0x00, 0xff, // [15, 0]
            0x40, 0x00, 0x00, 0xff, // [15, 1]
            0x40, 0x00, 0x00, 0xff, // [15, 2]
            0x40, 0x00, 0x00, 0xff // [15, 3]
        } // Top
    });
}
